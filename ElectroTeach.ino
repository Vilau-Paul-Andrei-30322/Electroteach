// Images to display on OLED
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// LCD and OLED display setup
LiquidCrystal_I2C lcd(0x27, 16, 2);  // LCD address for 16 chars and 2 line display
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 32
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);


   static const unsigned char PROGMEM logo[] = {
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0x9c, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x1c, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x18, 0x1c, 0xcc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x04, 0x1c, 0xc0, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x1c, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x1c, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0x00, 0x08, 0xc0, 0x67, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0x01, 0x80, 0xc0, 0x67, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x08, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x04, 0x1c, 0x80, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x04, 0x1c, 0xc0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x10, 0x1c, 0xc4, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x1c, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0x9c, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xcf, 0xff, 0xf9, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xcf, 0xff, 0xf9, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0x84, 0xe0, 0xc1, 0x84, 0x1c, 0x30, 0xe0, 0xff, 0xe1, 0x9f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0x80, 0xe0, 0x81, 0x84, 0x00, 0x10, 0xe0, 0x81, 0xc1, 0x93, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfe, 0x70, 0x9c, 0xbf, 0xcc, 0xe3, 0x99, 0x9c, 0x80, 0x5f, 0x93, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfe, 0x00, 0x80, 0xbf, 0xcc, 0xf3, 0x99, 0x80, 0xfe, 0x5f, 0x8c, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfe, 0x0c, 0x83, 0xbf, 0xcc, 0xf3, 0x99, 0x83, 0xc0, 0x5f, 0x9c, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfe, 0x7c, 0x9f, 0xbf, 0xcc, 0xf3, 0x99, 0x9f, 0x80, 0x5f, 0x9c, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0x84, 0xe0, 0x81, 0xc4, 0xfc, 0x38, 0xe0, 0x9e, 0x41, 0x9c, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0x84, 0xe0, 0xc1, 0xc4, 0xfc, 0x38, 0xe0, 0x80, 0x61, 0x9c, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
   };
static const unsigned char PROGMEM image1_easy[] = {
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xf8, 0x01, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xf9, 0xf9, 0xc0, 0x7f, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xfb, 0xf9, 0xce, 0x7f, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xfb, 0xf9, 0xc1, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xfb, 0xfd, 0xcc, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xfc, 0xff, 0xff, 0x1c, 0xff, 0xe7, 0xff, 0xfb, 0xfd, 0xcf, 0x1f, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xe0, 0x3f, 0xfe, 0x7f, 0xff, 0xc7, 0xff, 0xf3, 0xfc, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xfc, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xf9, 0xf8, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0x80, 0x00, 0x3f, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0xff, 0xf8, 0x07, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xf8, 0xc3, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xfc, 0x08, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xf0, 0x03, 0xe7, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xfc, 0xf9, 0xe3, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xfc, 0xe7, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xf8, 0x01, 0xe7, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xc7, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff  
    
};
static const unsigned char PROGMEM image2_easy[] = {
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xf7, 0x7b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xe7, 0x39, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xf8, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x02, 0x30, 0x80, 0x00, 0x0f, 0xff, 0xff, 0xff, 
0xff, 0xf8, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x1a, 0x94, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 
0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xc6, 0x7f, 0xff, 0xcf, 0xff, 0xff, 0xff, 
0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xef, 0x7f, 0xff, 0xcf, 0xff, 0xff, 0xff, 
0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xfc, 0xff, 0xff, 
0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xf8, 0x7f, 0xff, 
0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xcf, 0xf8, 0x7f, 0xff, 
0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0xff, 0xff, 0xff, 0xcf, 0xe0, 0x1f, 0xff, 
0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0xff, 0xff, 0xff, 0xcf, 0xe0, 0x1f, 0xff, 
0xf0, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xcf, 0xfc, 0xff, 0xff, 
0xf0, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0xff, 0xff, 0xff, 0xcf, 0xfc, 0xff, 0xff, 
0xff, 0x00, 0x1f, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xf6, 0xff, 0xff, 0xff, 0xcf, 0xfc, 0xff, 0xff, 
0xff, 0xfb, 0xff, 0xe6, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x1c, 0xff, 0xff, 
0xff, 0xfb, 0xff, 0xf2, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xe0, 0x00, 0x1c, 0xff, 0xff, 
0xff, 0xfb, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xfc, 0xff, 0xff, 
0xff, 0xfb, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xe0, 0x00, 0x1c, 0xff, 0xff, 
0xf0, 0x00, 0x01, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xe0, 0x00, 0x1c, 0xff, 0xff, 
0xf0, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xcf, 0xfc, 0xff, 0xff, 
0xff, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xcf, 0xfc, 0xff, 0xff, 
0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xfc, 0xff, 0xff, 
0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xfc, 0xff, 0xff, 
0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xfc, 0xff, 0xff, 
0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 
0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 
0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 
0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 
0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
static const unsigned char PROGMEM image3_easy[] = {
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x0f, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 
    0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xf6, 0xff, 
    0xff, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xef, 0x7f, 
    0xff, 0xfb, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x7f, 
    0xff, 0xf3, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x7f, 
    0xff, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xf6, 0xff, 
    0xff, 0xf3, 0x3f, 0xff, 0xff, 0xdc, 0xf7, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0x3e, 0xf9, 0xff, 
    0xff, 0xf3, 0x3f, 0xff, 0xff, 0x1c, 0xe3, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xbc, 0xff, 0xff, 
    0xff, 0xff, 0xfc, 0x00, 0x00, 0x08, 0x48, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0x99, 0xff, 0xff, 
    0xff, 0xff, 0xfc, 0x00, 0x00, 0xe3, 0x08, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0x9f, 0xff, 0xfd, 0x1f, 0xff, 0xff, 0xff, 0xe6, 0x3f, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xe4, 0xbf, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xf4, 0x3f, 0xff, 
    0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfa, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0x7f, 0xff, 0xff, 0xdc, 0xf7, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x7c, 0x00, 0x00, 0x1c, 0xe0, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfa, 0x3c, 0x00, 0x00, 0x08, 0x48, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xbf, 0xff, 0xff, 0xe3, 0x0f, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xbf, 0xff, 0xff, 0xf7, 0x9f, 0xff, 0xfd, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
static const unsigned char PROGMEM image1_medium[] = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0x9d, 0xef, 0xff, 0xff, 0xce, 0x37, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0x99, 0xcf, 0xff, 0xff, 0xc6, 0x37, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0x11, 0x87, 0xff, 0xff, 0x94, 0xa3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfc, 0x00, 0x00, 0x55, 0xb0, 0x00, 0x00, 0x35, 0x88, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xef, 0x9c, 0x00, 0x00, 0xc5, 0x30, 0x00, 0x00, 0x71, 0x98, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xe7, 0x3c, 0xff, 0xff, 0xcd, 0x7f, 0xff, 0xff, 0xf3, 0x9f, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xf7, 0x7c, 0xff, 0xff, 0xcc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xf2, 0x7c, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xfa, 0xfc, 0xfd, 0xff, 0xe1, 0xf3, 0xff, 0xfe, 0x4c, 0x3f, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xf8, 0xfc, 0xf0, 0x7f, 0xe4, 0xe3, 0xff, 0xfe, 0xed, 0xbf, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xfd, 0xfc, 0xfd, 0xff, 0xee, 0xcb, 0xff, 0xfe, 0x0f, 0xbf, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xff, 0xfc, 0xfd, 0xff, 0xe0, 0xfb, 0xff, 0xfe, 0x3f, 0x3f, 0xff, 0xfe, 0x3f, 0xff, 0xf1, 0xff, 
    0xff, 0xfc, 0xff, 0xff, 0xe3, 0xfb, 0xff, 0xfe, 0x9e, 0x7f, 0xff, 0xff, 0x8f, 0xff, 0x7c, 0x7f, 
    0xf8, 0x00, 0x00, 0x3f, 0xe9, 0xfb, 0xff, 0xfe, 0xcc, 0xff, 0x0e, 0x1f, 0xce, 0x1e, 0x7e, 0x7f, 
    0xf8, 0x00, 0x00, 0x3f, 0xec, 0xfb, 0xff, 0xfe, 0xec, 0x1f, 0x27, 0xcc, 0x1e, 0x4e, 0x60, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xee, 0xfb, 0xff, 0xff, 0xff, 0xff, 0x77, 0xec, 0xfe, 0xec, 0x67, 0xff, 
    0xff, 0xe0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0x0e, 0x3e, 0x09, 0x71, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xef, 0x8e, 0x38, 0x3c, 0x7f, 
    0xf8, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x4f, 0xcf, 0xce, 0x9f, 0x7e, 0x7f, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x66, 0x1c, 0x0e, 0xcf, 0x60, 0x7f, 
    0xff, 0xf0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x77, 0xfc, 0x7e, 0xef, 0x63, 0xff, 
    0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xf9, 0xff, 
    0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xf1, 0xff, 
    0xff, 0xfc, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff
    };
static const unsigned char PROGMEM image2_medium[] = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0x9d, 0xef, 0xff, 0xff, 0xce, 0x37, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0x99, 0xcf, 0xff, 0xff, 0xc6, 0x37, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0x11, 0x87, 0xff, 0xff, 0x94, 0xa3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfc, 0x00, 0x00, 0x55, 0xb0, 0x00, 0x00, 0x35, 0x88, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xef, 0x9c, 0x00, 0x00, 0xc5, 0x30, 0x00, 0x00, 0x71, 0x98, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xe7, 0x3c, 0xff, 0xff, 0xcd, 0x7f, 0xff, 0xff, 0xf3, 0x9f, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xf7, 0x7c, 0xff, 0xff, 0xcc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xf2, 0x7c, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xfa, 0xfc, 0xfd, 0xff, 0xe1, 0xf3, 0xff, 0xfe, 0x4c, 0x3f, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xf8, 0xfc, 0xf0, 0x7f, 0xe4, 0xe3, 0xff, 0xfe, 0xed, 0xbf, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xfd, 0xfc, 0xfd, 0xff, 0xee, 0xcb, 0xff, 0xfe, 0x0f, 0xbf, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xff, 0xfc, 0xfd, 0xff, 0xe0, 0xfb, 0xff, 0xfe, 0x3f, 0x3f, 0xff, 0xfe, 0x3f, 0xff, 0xf1, 0xff, 
    0xff, 0xfc, 0xff, 0xff, 0xe3, 0xfb, 0xff, 0xfe, 0x9e, 0x7f, 0xff, 0xff, 0x8f, 0xff, 0x7c, 0x7f, 
    0xf8, 0x00, 0x00, 0x3f, 0xe9, 0xfb, 0xff, 0xfe, 0xcc, 0xff, 0x0e, 0x1f, 0xce, 0x1e, 0x7e, 0x7f, 
    0xf8, 0x00, 0x00, 0x3f, 0xec, 0xfb, 0xff, 0xfe, 0xec, 0x1f, 0x27, 0xcc, 0x1e, 0x4e, 0x60, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xee, 0xfb, 0xff, 0xff, 0xff, 0xff, 0x77, 0xec, 0xfe, 0xec, 0x67, 0xff, 
    0xff, 0xe0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0x0e, 0x3e, 0x09, 0x71, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xef, 0x8e, 0x38, 0x3c, 0x7f, 
    0xf8, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x4f, 0xcf, 0xce, 0x9f, 0x7e, 0x7f, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x66, 0x1c, 0x0e, 0xcf, 0x60, 0x7f, 
    0xff, 0xf0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x77, 0xfc, 0x7e, 0xef, 0x63, 0xff, 
    0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xf9, 0xff, 
    0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xf1, 0xff, 
    0xff, 0xfc, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xf3, 0xff, 
    0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
    0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff
    };
    static const unsigned char PROGMEM image3_medium[] = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfb, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x73, 0xf9, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xa3, 0xf9, 0xff, 0xff, 0xe7, 0xff, 0xe7, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xbb, 0xf9, 0xff, 0xff, 0xe7, 0xe1, 0xc3, 0xff, 0xff, 0x9f, 0xdf, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xbb, 0xf9, 0xff, 0xff, 0xe7, 0xee, 0xdb, 0xff, 0xff, 0x9f, 0xdf, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xbb, 0xf9, 0xff, 0xff, 0xe7, 0xee, 0xfb, 0xff, 0xff, 0x9f, 0xdf, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x7b, 0xf9, 0xff, 0xff, 0xe7, 0xee, 0xf3, 0xff, 0xff, 0x9e, 0x03, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0x00, 0xee, 0xe7, 0xff, 0xff, 0x9f, 0xdf, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0x81, 0xe1, 0xc1, 0xff, 0xff, 0x9f, 0xdf, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xdf, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xef, 0xe0, 0xff, 0xff, 0xe0, 0x00, 0x7f, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x3b, 0xe1, 0xff, 0xff, 0x87, 0xee, 0xcf, 0xff, 0xe0, 0x00, 0x7f, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xb3, 0xfc, 0x7f, 0xff, 0xf1, 0xee, 0x87, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xa3, 0xf8, 0x7f, 0xff, 0xe1, 0xec, 0xb7, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0x3b, 0xf3, 0xff, 0xff, 0xcf, 0xe1, 0xf7, 0xff, 0xff, 0x9f, 0x81, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x7b, 0xe3, 0xff, 0xff, 0x8f, 0xec, 0xe7, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0x3b, 0xf8, 0xff, 0xff, 0xe3, 0xee, 0xcf, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xbb, 0xfe, 0x7f, 0xff, 0xf9, 0xee, 0x83, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xbf, 0xfc, 0x7f, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
static const unsigned char PROGMEM image1_hard[] = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfb, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x73, 0xf9, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xa3, 0xf9, 0xff, 0xff, 0xe7, 0xff, 0xe7, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xbb, 0xf9, 0xff, 0xff, 0xe7, 0xe1, 0xc3, 0xff, 0xff, 0x9f, 0xdf, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xbb, 0xf9, 0xff, 0xff, 0xe7, 0xee, 0xdb, 0xff, 0xff, 0x9f, 0xdf, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xbb, 0xf9, 0xff, 0xff, 0xe7, 0xee, 0xfb, 0xff, 0xff, 0x9f, 0xdf, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x7b, 0xf9, 0xff, 0xff, 0xe7, 0xee, 0xf3, 0xff, 0xff, 0x9e, 0x03, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0x00, 0xee, 0xe7, 0xff, 0xff, 0x9f, 0xdf, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0x81, 0xe1, 0xc1, 0xff, 0xff, 0x9f, 0xdf, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xdf, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xef, 0xe0, 0xff, 0xff, 0xe0, 0x00, 0x7f, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x3b, 0xe1, 0xff, 0xff, 0x87, 0xee, 0xcf, 0xff, 0xe0, 0x00, 0x7f, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xb3, 0xfc, 0x7f, 0xff, 0xf1, 0xee, 0x87, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xa3, 0xf8, 0x7f, 0xff, 0xe1, 0xec, 0xb7, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0x3b, 0xf3, 0xff, 0xff, 0xcf, 0xe1, 0xf7, 0xff, 0xff, 0x9f, 0x81, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x7b, 0xe3, 0xff, 0xff, 0x8f, 0xec, 0xe7, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0x3b, 0xf8, 0xff, 0xff, 0xe3, 0xee, 0xcf, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xbb, 0xfe, 0x7f, 0xff, 0xf9, 0xee, 0x83, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfb, 0xbf, 0xfc, 0x7f, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
static const unsigned char PROGMEM image2_hard[] = {
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xb3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0x33, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xf2, 0x21, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xc0, 0x00, 0x02, 0xac, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0xff, 0xff, 0xff, 
    0xfe, 0x7f, 0xff, 0xc0, 0x00, 0x08, 0x8e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0xf9, 0xff, 0xdf, 
    0xfe, 0x7f, 0xff, 0xcf, 0xff, 0xfc, 0xcf, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xf3, 0xf9, 0xe7, 0x9f, 
    0xfe, 0x7f, 0xf7, 0xcf, 0xff, 0xfd, 0xdf, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xf9, 0xf7, 0xbf, 
    0xfe, 0x7c, 0xe7, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xf9, 0xf3, 0x3f, 
    0xfe, 0x7e, 0xcf, 0xcf, 0xff, 0x87, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xf9, 0xfb, 0x7f, 
    0xfe, 0x7e, 0x5e, 0x01, 0x87, 0xb3, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xf9, 0xf8, 0x7f, 
    0xfe, 0x7f, 0x1f, 0xff, 0xff, 0xb3, 0xff, 0xff, 0xc3, 0xe7, 0xff, 0xff, 0xff, 0xf9, 0xfc, 0xc3, 
    0xfe, 0x7f, 0x3f, 0x03, 0xff, 0x87, 0xff, 0xff, 0xbf, 0xe7, 0xff, 0xff, 0xff, 0xf9, 0xfe, 0x99, 
    0xfe, 0x7f, 0xff, 0xcf, 0xdf, 0xa7, 0xff, 0xff, 0xbf, 0x81, 0xff, 0xff, 0xff, 0xf9, 0xff, 0x99, 
    0xfe, 0x7f, 0xff, 0xcf, 0x8f, 0xb3, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xc3, 
    0xfe, 0x7f, 0xff, 0xcf, 0xdf, 0xff, 0xff, 0xff, 0xbf, 0x81, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 
    0xfe, 0x7f, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xe7, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 
    0xfe, 0x7f, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 
    0xf8, 0x1f, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xe0, 0x7f, 0xff, 
    0xfc, 0x3f, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xf3, 0xf0, 0xff, 0xff, 
    0xfe, 0x7f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0xf9, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
static const unsigned char PROGMEM image3_hard[] = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x4d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x44, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x01, 0x51, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0x13, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0x37, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0x9c, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xc9, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xe3, 0x79, 0x37, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xe7, 0x79, 0x13, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf1, 0x51, 0xfc, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xfe, 0x05, 0x44, 0x00, 0x0f, 0xff, 0xfd, 0xcf, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfc, 0x4f, 0xfc, 0x00, 0x00, 0x01, 0xf1, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfc, 0xdf, 0xfc, 0xff, 0xff, 0xfd, 0x1e, 0x7f, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xfd, 0xff, 0x8f, 0xff, 0xf3, 0xff, 0xfe, 0x7d, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xfd, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x0f, 0x39, 0xff, 0xff, 
    0xff, 0xf9, 0x37, 0xfc, 0xff, 0xff, 0xfd, 0xbf, 0xe0, 0x00, 0x00, 0x00, 0x0f, 0xb3, 0xff, 0xff, 
    0xff, 0xf9, 0x13, 0xfc, 0xff, 0xff, 0xfd, 0x1f, 0x9f, 0xff, 0xff, 0xff, 0xff, 0x97, 0xff, 0xff, 
    0xff, 0xf1, 0x51, 0xfc, 0xff, 0xf8, 0x01, 0xbc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x0f, 0xff, 
    0xfe, 0x05, 0x44, 0x00, 0xff, 0xf8, 0x01, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0x67, 0xff, 
    0xff, 0xfc, 0x4f, 0xff, 0xff, 0xfb, 0xfd, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xee, 0x77, 0xff, 
    0xb9, 0xfc, 0xdf, 0xff, 0xff, 0xfb, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x67, 0xff, 
    0x93, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xff, 
    0xc0, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xca, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xec, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
    
static const unsigned char PROGMEM outputimage1_easy[] = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xdf, 0xff, 0xff, 0x83, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xc1, 0xff, 0xff, 0xf9, 0xff, 0xff, 
    0xff, 0x07, 0xff, 0xff, 0x91, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xc8, 0xff, 0xff, 0xf0, 0xff, 0xff, 
    0xfe, 0x27, 0xff, 0xff, 0x9d, 0xff, 0xff, 0x98, 0xff, 0xff, 0xce, 0x7f, 0xff, 0xe0, 0x7f, 0xff, 
    0xfe, 0xf1, 0xff, 0xfe, 0x3c, 0xff, 0xff, 0x9c, 0xff, 0xff, 0xce, 0x7f, 0xff, 0xe6, 0x7f, 0xff, 
    0xfe, 0xf9, 0xff, 0xfe, 0x7c, 0x7f, 0xff, 0x9c, 0xff, 0xff, 0xce, 0x7f, 0xff, 0xee, 0x7f, 0xff, 
    0xfe, 0xf9, 0xff, 0xfe, 0x7e, 0x7f, 0xff, 0x1c, 0x7f, 0xff, 0x8e, 0x7f, 0xff, 0xee, 0x7f, 0xff, 
    0xfe, 0xf8, 0xff, 0xfe, 0x7e, 0x7f, 0xff, 0x3f, 0x3f, 0xff, 0x3e, 0x3f, 0xff, 0xce, 0x3f, 0xff, 
    0xfe, 0xfe, 0x7f, 0xfc, 0x7e, 0x7f, 0xff, 0x7f, 0x3f, 0xfe, 0x3f, 0x3f, 0xff, 0x8f, 0x1f, 0xff, 
    0xfc, 0xfe, 0x7f, 0xf9, 0xfe, 0x7f, 0xfc, 0xff, 0x3f, 0xfe, 0x7f, 0xbf, 0xff, 0x9f, 0x9f, 0xff, 
    0xf8, 0xfe, 0x7f, 0xf9, 0xfe, 0x7f, 0xfc, 0xff, 0x3f, 0xfe, 0x7f, 0x3f, 0xff, 0x9f, 0x9f, 0xff, 
    0xf9, 0xfe, 0x7f, 0xf9, 0xff, 0x7f, 0xfc, 0xff, 0x3f, 0xfe, 0x7f, 0x8f, 0xff, 0x1f, 0x8f, 0xff, 
    0xf9, 0xf8, 0x0f, 0xf9, 0xff, 0x1f, 0xfc, 0xff, 0x3f, 0xfe, 0x7f, 0xcf, 0xfe, 0x7f, 0xc7, 0xff, 
    0xf9, 0xc0, 0xc7, 0xf9, 0xff, 0x81, 0xfc, 0xfe, 0x03, 0xf8, 0xff, 0x81, 0xfe, 0x7f, 0x03, 0xff, 
    0xf1, 0x0e, 0x70, 0xf9, 0xf0, 0x1c, 0x7c, 0xf8, 0x18, 0xf9, 0xfe, 0x0c, 0x7e, 0x7e, 0x00, 0x7f, 
    0xe0, 0x3e, 0x7e, 0x39, 0xe3, 0x9f, 0x18, 0xc3, 0x9e, 0x39, 0xf0, 0xce, 0x3e, 0x7c, 0x67, 0x1f, 
    0xe3, 0xfe, 0x3f, 0x81, 0x8f, 0x9f, 0x80, 0x1f, 0xdf, 0x19, 0xc7, 0xcf, 0x8e, 0x60, 0xe7, 0x9e, 
    0xff, 0xff, 0x3f, 0xf0, 0x3f, 0x9f, 0xe0, 0xff, 0xcf, 0xc0, 0x0f, 0xcf, 0xc0, 0x0f, 0xe3, 0xc0, 
    0xff, 0xff, 0x3f, 0xf3, 0xff, 0x9f, 0xf3, 0xff, 0xc7, 0xf8, 0xff, 0xcf, 0xfc, 0x1f, 0xe3, 0xf8, 
    0xff, 0xff, 0x3f, 0xf3, 0xff, 0x9f, 0xf3, 0xff, 0xe7, 0xf9, 0xff, 0xc7, 0xfc, 0xff, 0xf3, 0xfc, 
    0xff, 0xff, 0x3f, 0xf3, 0xff, 0xe7, 0xf3, 0xff, 0xe7, 0xf9, 0xff, 0xf3, 0xfc, 0xff, 0xf3, 0xfc, 
    0xff, 0xff, 0x3f, 0xf3, 0xff, 0xef, 0xf3, 0xff, 0xe7, 0xf9, 0xff, 0xf1, 0xfc, 0xff, 0xf3, 0xfc, 
    0xff, 0xff, 0xcf, 0xf3, 0xff, 0xef, 0xe3, 0xff, 0xe7, 0xf9, 0xff, 0xf9, 0xf1, 0xff, 0xf3, 0xfc, 
    0xff, 0xff, 0xcf, 0xe7, 0xff, 0xe3, 0xe7, 0xff, 0xe7, 0xf1, 0xff, 0xfc, 0x73, 0xff, 0xf3, 0xf8, 
    0xff, 0xff, 0xcf, 0xcf, 0xff, 0xf3, 0xe7, 0xff, 0xe3, 0xe7, 0xff, 0xfe, 0x73, 0xff, 0xf3, 0xf9, 
    0xff, 0xff, 0xcf, 0xcf, 0xff, 0xf3, 0xe7, 0xff, 0xf1, 0xe7, 0xff, 0xfe, 0x63, 0xff, 0xf8, 0xfb, 
    0xff, 0xff, 0xcf, 0xcf, 0xff, 0xf3, 0x8f, 0xff, 0xf9, 0xe7, 0xff, 0xfe, 0x6f, 0xff, 0xfc, 0x79, 
    0xff, 0xff, 0xc7, 0x8f, 0xff, 0xf3, 0x9f, 0xff, 0xf9, 0xc7, 0xff, 0xfe, 0x4f, 0xff, 0xff, 0x63, 
    0xff, 0xff, 0xe3, 0x3f, 0xff, 0xf1, 0x9f, 0xff, 0xf8, 0xcf, 0xff, 0xfe, 0x0f, 0xff, 0xff, 0x27, 
    0xff, 0xff, 0xf0, 0x3f, 0xff, 0xfc, 0x1f, 0xff, 0xfe, 0x1f, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0x07, 
    0xff, 0xff, 0xf8, 0x7f, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0x9f, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

static const unsigned char PROGMEM outputimage1_medium[] = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x4d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x44, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x01, 0x51, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0x13, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0x37, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0x9c, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xc9, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xe3, 0x79, 0x37, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xe7, 0x79, 0x13, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf1, 0x51, 0xfc, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xfe, 0x05, 0x44, 0x00, 0x0f, 0xff, 0xfd, 0xcf, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfc, 0x4f, 0xfc, 0x00, 0x00, 0x01, 0xf1, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfc, 0xdf, 0xfc, 0xff, 0xff, 0xfd, 0x1e, 0x7f, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xfd, 0xff, 0x8f, 0xff, 0xf3, 0xff, 0xfe, 0x7d, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xfd, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x0f, 0x39, 0xff, 0xff, 
    0xff, 0xf9, 0x37, 0xfc, 0xff, 0xff, 0xfd, 0xbf, 0xe0, 0x00, 0x00, 0x00, 0x0f, 0xb3, 0xff, 0xff, 
    0xff, 0xf9, 0x13, 0xfc, 0xff, 0xff, 0xfd, 0x1f, 0x9f, 0xff, 0xff, 0xff, 0xff, 0x97, 0xff, 0xff, 
    0xff, 0xf1, 0x51, 0xfc, 0xff, 0xf8, 0x01, 0xbc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x0f, 0xff, 
    0xfe, 0x05, 0x44, 0x00, 0xff, 0xf8, 0x01, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xce, 0x67, 0xff, 
    0xff, 0xfc, 0x4f, 0xff, 0xff, 0xfb, 0xfd, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xee, 0x77, 0xff, 
    0xb9, 0xfc, 0xdf, 0xff, 0xff, 0xfb, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x67, 0xff, 
    0x93, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xff, 
    0xc0, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xca, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xec, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

static const unsigned char PROGMEM outputimage1_hard[] = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xdf, 0xff, 0xff, 0x83, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xc1, 0xff, 0xff, 0xf9, 0xff, 0xff, 
    0xff, 0x07, 0xff, 0xff, 0x91, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xc8, 0xff, 0xff, 0xf0, 0xff, 0xff, 
    0xfe, 0x27, 0xff, 0xff, 0x9d, 0xff, 0xff, 0x98, 0xff, 0xff, 0xce, 0x7f, 0xff, 0xe0, 0x7f, 0xff, 
    0xfe, 0xf1, 0xff, 0xfe, 0x3c, 0xff, 0xff, 0x9c, 0xff, 0xff, 0xce, 0x7f, 0xff, 0xe6, 0x7f, 0xff, 
    0xfe, 0xf9, 0xff, 0xfe, 0x7c, 0x7f, 0xff, 0x9c, 0xff, 0xff, 0xce, 0x7f, 0xff, 0xee, 0x7f, 0xff, 
    0xfe, 0xf9, 0xff, 0xfe, 0x7e, 0x7f, 0xff, 0x1c, 0x7f, 0xff, 0x8e, 0x7f, 0xff, 0xee, 0x7f, 0xff, 
    0xfe, 0xf8, 0xff, 0xfe, 0x7e, 0x7f, 0xff, 0x3f, 0x3f, 0xff, 0x3e, 0x3f, 0xff, 0xce, 0x3f, 0xff, 
    0xfe, 0xfe, 0x7f, 0xfc, 0x7e, 0x7f, 0xff, 0x7f, 0x3f, 0xfe, 0x3f, 0x3f, 0xff, 0x8f, 0x1f, 0xff, 
    0xfc, 0xfe, 0x7f, 0xf9, 0xfe, 0x7f, 0xfc, 0xff, 0x3f, 0xfe, 0x7f, 0xbf, 0xff, 0x9f, 0x9f, 0xff, 
    0xf8, 0xfe, 0x7f, 0xf9, 0xfe, 0x7f, 0xfc, 0xff, 0x3f, 0xfe, 0x7f, 0x3f, 0xff, 0x9f, 0x9f, 0xff, 
    0xf9, 0xfe, 0x7f, 0xf9, 0xff, 0x7f, 0xfc, 0xff, 0x3f, 0xfe, 0x7f, 0x8f, 0xff, 0x1f, 0x8f, 0xff, 
    0xf9, 0xf8, 0x0f, 0xf9, 0xff, 0x1f, 0xfc, 0xff, 0x3f, 0xfe, 0x7f, 0xcf, 0xfe, 0x7f, 0xc7, 0xff, 
    0xf9, 0xc0, 0xc7, 0xf9, 0xff, 0x81, 0xfc, 0xfe, 0x03, 0xf8, 0xff, 0x81, 0xfe, 0x7f, 0x03, 0xff, 
    0xf1, 0x0e, 0x70, 0xf9, 0xf0, 0x1c, 0x7c, 0xf8, 0x18, 0xf9, 0xfe, 0x0c, 0x7e, 0x7e, 0x00, 0x7f, 
    0xe0, 0x3e, 0x7e, 0x39, 0xe3, 0x9f, 0x18, 0xc3, 0x9e, 0x39, 0xf0, 0xce, 0x3e, 0x7c, 0x67, 0x1f, 
    0xe3, 0xfe, 0x3f, 0x81, 0x8f, 0x9f, 0x80, 0x1f, 0xdf, 0x19, 0xc7, 0xcf, 0x8e, 0x60, 0xe7, 0x9e, 
    0xff, 0xff, 0x3f, 0xf0, 0x3f, 0x9f, 0xe0, 0xff, 0xcf, 0xc0, 0x0f, 0xcf, 0xc0, 0x0f, 0xe3, 0xc0, 
    0xff, 0xff, 0x3f, 0xf3, 0xff, 0x9f, 0xf3, 0xff, 0xc7, 0xf8, 0xff, 0xcf, 0xfc, 0x1f, 0xe3, 0xf8, 
    0xff, 0xff, 0x3f, 0xf3, 0xff, 0x9f, 0xf3, 0xff, 0xe7, 0xf9, 0xff, 0xc7, 0xfc, 0xff, 0xf3, 0xfc, 
    0xff, 0xff, 0x3f, 0xf3, 0xff, 0xe7, 0xf3, 0xff, 0xe7, 0xf9, 0xff, 0xf3, 0xfc, 0xff, 0xf3, 0xfc, 
    0xff, 0xff, 0x3f, 0xf3, 0xff, 0xef, 0xf3, 0xff, 0xe7, 0xf9, 0xff, 0xf1, 0xfc, 0xff, 0xf3, 0xfc, 
    0xff, 0xff, 0xcf, 0xf3, 0xff, 0xef, 0xe3, 0xff, 0xe7, 0xf9, 0xff, 0xf9, 0xf1, 0xff, 0xf3, 0xfc, 
    0xff, 0xff, 0xcf, 0xe7, 0xff, 0xe3, 0xe7, 0xff, 0xe7, 0xf1, 0xff, 0xfc, 0x73, 0xff, 0xf3, 0xf8, 
    0xff, 0xff, 0xcf, 0xcf, 0xff, 0xf3, 0xe7, 0xff, 0xe3, 0xe7, 0xff, 0xfe, 0x73, 0xff, 0xf3, 0xf9, 
    0xff, 0xff, 0xcf, 0xcf, 0xff, 0xf3, 0xe7, 0xff, 0xf1, 0xe7, 0xff, 0xfe, 0x63, 0xff, 0xf8, 0xfb, 
    0xff, 0xff, 0xcf, 0xcf, 0xff, 0xf3, 0x8f, 0xff, 0xf9, 0xe7, 0xff, 0xfe, 0x6f, 0xff, 0xfc, 0x79, 
    0xff, 0xff, 0xc7, 0x8f, 0xff, 0xf3, 0x9f, 0xff, 0xf9, 0xc7, 0xff, 0xfe, 0x4f, 0xff, 0xff, 0x63, 
    0xff, 0xff, 0xe3, 0x3f, 0xff, 0xf1, 0x9f, 0xff, 0xf8, 0xcf, 0xff, 0xfe, 0x0f, 0xff, 0xff, 0x27, 
    0xff, 0xff, 0xf0, 0x3f, 0xff, 0xfc, 0x1f, 0xff, 0xfe, 0x1f, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0x07, 
    0xff, 0xff, 0xf8, 0x7f, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0x9f, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

// OLED Logo and Image array
static const unsigned char* const imagesEasy[] = { image1_easy, image2_easy, image3_easy };
static const unsigned char* const imagesMedium[] = { image1_medium, image2_medium, image3_medium };
static const unsigned char* const imagesHard[] = { image1_hard, image2_hard, image3_hard };

bool imagesCompletedEasy[sizeof(imagesEasy) / sizeof(imagesEasy[0])] = {false};
bool imagesCompletedMedium[sizeof(imagesMedium) / sizeof(imagesMedium[0])] = {false};
bool imagesCompletedHard[sizeof(imagesHard) / sizeof(imagesHard[0])] = {false};
bool* currentCompleted;

// Create pointers to these arrays
static const unsigned char* const outputImagesEasy[] = { outputimage1_easy };
static const unsigned char* const outputImagesMedium[] = { outputimage1_medium };
static const unsigned char* const outputImagesHard[] = { outputimage1_hard };

const unsigned char** currentImages;
int numImages;
int currentImageIndex = 0;

const int nextButtonPin = 2;  // Button to navigate and cycle images
const int selectButtonPin = 4;  // Button to select difficulty
const int backButtonPin = 7;
const int outputButtonPin = 8; // Output button pin
int nextButtonState = 0;
int selectButtonState = 0;
int lastBackButtonState = 0;
int lastNextButtonState = LOW;
int lastSelectButtonState = LOW;
int lastOutputButtonState = LOW;
unsigned long lastDebounceTime = 0;
unsigned long debounceDelay = 50;
int completions = 0;
bool showingOutputImage = false; // Tracks if the output image is currently shown
//const int analogPin = A0;  // Pin where the voltage is read
//float voltage = 0.0;

enum State { START, CHOOSE_DIFFICULTY, VIEW_IMAGES, ALL_COMPLETED };
State currentState = START;
int difficulty = 1; // Current difficulty level (1 for Easy, 2 for Mid, 3 for Hard)
int imageIndex = 0; // Index of the current image

void setup() {
  pinMode(nextButtonPin, INPUT);
  pinMode(selectButtonPin, INPUT);
   pinMode(backButtonPin, INPUT);
   pinMode(outputButtonPin, INPUT);
  Serial.begin(9600);
  lcd.init();
  lcd.backlight();
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
   currentCompleted = imagesCompletedEasy;
  display.clearDisplay();
  display.drawBitmap(0, 0, logo, 128, 32, 1);
  display.display();
  showInitialMessage();
}

void showInitialMessage() {
  lcd.clear();
  lcd.print("ELECTROTEACH");
  lcd.setCursor(0, 1);
  lcd.print("START LEARNING");
  delay(3000);  // Wait for 3 seconds and then transition
  transitionToDifficultySelection();
}

void transitionToDifficultySelection() {
  currentState = CHOOSE_DIFFICULTY;
  lcd.clear();
  lcd.print("EASY MID HARD");
  lcd.setCursor(0, 1);
  lcd.print("Difficulty: ");
  lcd.print(difficulty);
  lcd.print("   ");

  // Set current images and completed array based on difficulty
  switch (difficulty) {
    case 1: currentImages = imagesEasy; currentCompleted = imagesCompletedEasy; break;
    case 2: currentImages = imagesMedium; currentCompleted = imagesCompletedMedium; break;
    case 3: currentImages = imagesHard; currentCompleted = imagesCompletedHard; break;
  }
  numImages = sizeof(imagesEasy) / sizeof(imagesEasy[0]); // Assuming all arrays are the same size
  currentImageIndex = 0;
}

void loop() {
  int nextReading = digitalRead(nextButtonPin);
  int selectReading = digitalRead(selectButtonPin);
  int backReading = digitalRead(backButtonPin);
  int outputButtonState = digitalRead(outputButtonPin);
  //int sensorValue = analogRead(analogPin);  // Read the analog input
  //voltage = sensorValue * (5.0 / 1023.0);  // Convert to voltage
  //Serial.print("Voltage: ");
  //Serial.println(voltage);  // Print the voltage to the Serial Monitor
 // delay(1000);  // Delay a second between readings

  if (millis() - lastDebounceTime > debounceDelay) {
    if (nextReading != lastNextButtonState) {
      lastNextButtonState = nextReading;
      if (nextReading == HIGH) {
        handleNextButtonPress();
      }
    }
    if (selectReading != lastSelectButtonState) {
      lastSelectButtonState = selectReading;
      if (selectReading == HIGH) {
        handleSelectButtonPress();
      }
    }
    if (backReading != lastBackButtonState) {
      lastBackButtonState = backReading;
      if (backReading == HIGH) {
        handleBackButtonPress();
      }
    }
    if (outputButtonState != lastOutputButtonState) {
    lastOutputButtonState = outputButtonState;
    if (outputButtonState == HIGH) {
      handleOutputButtonPress();
    }
    }
    lastDebounceTime = millis();
  }
}

void showCompletionCount() {
  int completedCount = 0;
  for (int i = 0; i < numImages; i++) {
    if (currentCompleted[i]) {
      completedCount++;
    }
  }
  lcd.setCursor(0, 1);  // Set cursor to second row
  lcd.print("Completed: ");
  lcd.print(completedCount);
  lcd.print(" of ");
  lcd.print(numImages);
}

void handleBackButtonPress() {
  if (currentState == VIEW_IMAGES || currentState == ALL_COMPLETED) {
    currentState = CHOOSE_DIFFICULTY;
    currentImageIndex = 0; // Reset image index
    transitionToDifficultySelection();
  }
}

void handleNextButtonPress() {
  if (currentState == CHOOSE_DIFFICULTY) {
    difficulty = (difficulty % 3) + 1; // Cycle through 1, 2, 3
    lcd.setCursor(0, 1);
    lcd.print("Difficulty: ");
    lcd.print(difficulty);
    lcd.print("   ");
    switch (difficulty) {
      case 1: currentImages = imagesEasy; numImages = sizeof(imagesEasy) / sizeof(imagesEasy[0]); break;
      case 2: currentImages = imagesMedium; numImages = sizeof(imagesMedium) / sizeof(imagesMedium[0]); break;
      case 3: currentImages = imagesHard; numImages = sizeof(imagesHard) / sizeof(imagesHard[0]); break;
    }
  } else if (currentState == VIEW_IMAGES) {
    do {
      currentImageIndex = (currentImageIndex + 1) % numImages;
    } while (currentCompleted[currentImageIndex] && numImages > 1); // Skip completed images, ensure there's more than one image

    display.clearDisplay();
    display.drawBitmap(0, 0, currentImages[currentImageIndex], 128, 32, 1);
    display.display();
  }
}

void handleSelectButtonPress() {
  if (currentState == CHOOSE_DIFFICULTY) {
    // Transition to viewing images of the selected difficulty
    currentState = VIEW_IMAGES;
    lcd.clear();
    lcd.print("Viewing: ");
    switch (difficulty) {
      case 1:
        lcd.print("Easy");
        currentImages = imagesEasy;
        currentCompleted = imagesCompletedEasy;
        break;
      case 2:
        lcd.print("Medium");
        currentImages = imagesMedium;
        currentCompleted = imagesCompletedMedium;
        break;
      case 3:
        lcd.print("Hard");
        currentImages = imagesHard;
        currentCompleted = imagesCompletedHard;
        break;
    }
    numImages = sizeof(imagesEasy) / sizeof(imagesEasy[0]);
    currentImageIndex = 0; // Start from the first image
    showCompletionCount();  // Show completed count after selecting difficulty
    display.clearDisplay();
    display.drawBitmap(0, 0, currentImages[currentImageIndex], 128, 32, 1);
    display.display();
  } else if (currentState == VIEW_IMAGES) {
    // Mark the current image as completed and move to the next available image
    currentCompleted[currentImageIndex] = true; // Mark the current image as completed
    showCompletionCount();  // Update completion count on the LCD

    // Attempt to find the next uncompleted image
    int originalIndex = currentImageIndex;
    do {
      currentImageIndex = (currentImageIndex + 1) % numImages;
    } while (currentCompleted[currentImageIndex] && currentImageIndex != originalIndex); // Prevent infinite loop

    // Check if all images are completed
    if (currentImageIndex == originalIndex && currentCompleted[currentImageIndex]) {
      currentState = ALL_COMPLETED;
      lcd.clear();
      lcd.print("All Completed!");
      display.clearDisplay();
      display.drawBitmap(0, 0, logo, 128, 32, 1); // Show completion screen
      display.display();
    } else {
      // Display the next uncompleted image
      display.clearDisplay();
      display.drawBitmap(0, 0, currentImages[currentImageIndex], 128, 32, 1);
      display.display();
    }
  }
}

void handleOutputButtonPress() {
  showingOutputImage = !showingOutputImage; // Toggle the state

  if (showingOutputImage) {
    // Display the corresponding output image
    const unsigned char* imageToShow = nullptr;
    switch (difficulty) {
      case 1: imageToShow = outputImagesEasy[currentImageIndex]; break;
      case 2: imageToShow = outputImagesMedium[currentImageIndex]; break;
      case 3: imageToShow = outputImagesHard[currentImageIndex]; break;
    }
    display.clearDisplay();
    display.drawBitmap(0, 0, imageToShow, 128, 32, 1);
    display.display();
  } else {
    // Display the original image
    const unsigned char* imageToShow = currentImages[currentImageIndex];
    display.clearDisplay();
    display.drawBitmap(0, 0, imageToShow, 128, 32, 1);
    display.display();
  }
}
